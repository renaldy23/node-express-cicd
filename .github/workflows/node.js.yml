# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

      - name: Login To Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.HUB_USERNAME }}/node-cicd:${{ github.run_number }}

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy container with SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            docker login -u ${{ secrets.HUB_USERNAME }} -p ${{ secrets.HUB_TOKEN }}
            docker rm -f ${{ secrets.HUB_USERNAME }}/node-cicd
            docker pull ${{ secrets.HUB_USERNAME }}/node-cicd:${{ github.run_number }}
            docker run -d -p 80:3000 --name ${{ secrets.HUB_USERNAME }}/node-cicd ${{ secrets.HUB_USERNAME }}/node-cicd
